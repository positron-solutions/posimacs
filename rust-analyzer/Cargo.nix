# This file was @generated by cargo2nix 0.8.3.
# It is not intended to be manually edited.
{ workspaceSrc ? ./. }:

{
  release ? true,
  rootFeatures ? [
    "arena/default"
    "assists/default"
    "base_db/default"
    "cfg/default"
    "tt/default"
    "stdx/default"
    "mbe/default"
    "parser/default"
    "syntax/default"
    "text_edit/default"
    "expect/default"
    "test_utils/default"
    "profile/default"
    "vfs/default"
    "paths/default"
    "hir/default"
    "hir_def/default"
    "hir_expand/default"
    "hir_ty/default"
    "ide_db/default"
    "flycheck/default"
    "toolchain/default"
    "ide/default"
    "ssr/default"
    "proc_macro_api/default"
    "proc_macro_srv/default"
    "proc_macro_test/default"
    "project_model/default"
    "rust-analyzer/default"
    "vfs-notify/default"
    "xtask/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  mkRustCrate,
  rustLib,
  lib,
}:
let
  inherit (rustLib) fetchCratesIo fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
    dev = builtins.fromTOML "debug = 0\n[package.miniz_oxide]\nopt-level = 3\n";
    release = builtins.fromTOML "debug = 0\nincremental = true\n[package.chalk-derive]\nopt-level = 0\n\n[package.proc-macro2]\nopt-level = 0\n\n[package.quote]\nopt-level = 0\n\n[package.salsa-macros]\nopt-level = 0\n\n[package.serde_derive]\nopt-level = 0\n\n[package.syn]\nopt-level = 0\n\n[package.tracing-attributes]\nopt-level = 0\n\n[package.xtask]\nopt-level = 0\n";
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures; } // (f profileName)));
    in { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
in
{
  cargo2nixVersion = "0.8.3";
  workspace = {
    arena = rustPackages.unknown.arena."0.0.0";
    assists = rustPackages.unknown.assists."0.0.0";
    base_db = rustPackages.unknown.base_db."0.0.0";
    cfg = rustPackages.unknown.cfg."0.0.0";
    tt = rustPackages.unknown.tt."0.0.0";
    stdx = rustPackages.unknown.stdx."0.0.0";
    mbe = rustPackages.unknown.mbe."0.0.0";
    parser = rustPackages.unknown.parser."0.0.0";
    syntax = rustPackages.unknown.syntax."0.0.0";
    text_edit = rustPackages.unknown.text_edit."0.0.0";
    expect = rustPackages.unknown.expect."0.0.0";
    test_utils = rustPackages.unknown.test_utils."0.0.0";
    profile = rustPackages.unknown.profile."0.0.0";
    vfs = rustPackages.unknown.vfs."0.0.0";
    paths = rustPackages.unknown.paths."0.0.0";
    hir = rustPackages.unknown.hir."0.0.0";
    hir_def = rustPackages.unknown.hir_def."0.0.0";
    hir_expand = rustPackages.unknown.hir_expand."0.0.0";
    hir_ty = rustPackages.unknown.hir_ty."0.0.0";
    ide_db = rustPackages.unknown.ide_db."0.0.0";
    flycheck = rustPackages.unknown.flycheck."0.0.0";
    toolchain = rustPackages.unknown.toolchain."0.0.0";
    ide = rustPackages.unknown.ide."0.0.0";
    ssr = rustPackages.unknown.ssr."0.0.0";
    proc_macro_api = rustPackages.unknown.proc_macro_api."0.0.0";
    proc_macro_srv = rustPackages.unknown.proc_macro_srv."0.0.0";
    proc_macro_test = rustPackages.unknown.proc_macro_test."0.0.0";
    project_model = rustPackages.unknown.project_model."0.0.0";
    rust-analyzer = rustPackages.unknown.rust-analyzer."0.0.0";
    vfs-notify = rustPackages.unknown.vfs-notify."0.0.0";
    xtask = rustPackages.unknown.xtask."0.1.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.13.0" = overridableMkRustCrate (profileName: rec {
    name = "addr2line";
    version = "0.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1b6a2d3371669ab3ca9797670853d61402b03d0b4b9ebf33d677dfa720203072"; };
    dependencies = {
      gimli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.22.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".adler."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "adler";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee2a4ec343196209d6594e19543ae87a39f96d5534d7174822a3ad825dd6ed7e"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "ansi_term";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" = overridableMkRustCrate (profileName: rec {
    name = "anyhow";
    version = "1.0.32";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6b602bfe940d21c130f3895acd65221e8a61270debe89d628b9cb4e3ccb8569b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".anymap."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "anymap";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "33954243bd79057c2de7338850b85983a44588021f8a5fee574a8888c6de4344"; };
  });

  "unknown".arena."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "arena";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/arena";
  });

  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cff77d8686867eceff3105329d4698d96c2391c176d5d03adc90c7389162b5b8"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });

  "unknown".assists."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "assists";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/assists";
    dependencies = {
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      hir = rustPackages."unknown".hir."0.0.0" { inherit profileName; };
      ide_db = rustPackages."unknown".ide_db."0.0.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      profile = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      text_edit = rustPackages."unknown".text_edit."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" = overridableMkRustCrate (profileName: rec {
    name = "atty";
    version = "0.2.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "autocfg";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.50" = overridableMkRustCrate (profileName: rec {
    name = "backtrace";
    version = "0.3.50";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "46254cf2fdcdf1badb5934448c1bcbe046a56537b3987d96c51a7afc5d03f293"; };
    features = builtins.concatLists [
      [ "addr2line" ]
      [ "default" ]
      [ "gimli-symbolize" ]
      [ "miniz_oxide" ]
      [ "object" ]
      [ "std" ]
    ];
    dependencies = {
      addr2line = rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.13.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.1" { inherit profileName; };
      object = rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.20.0" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".base64."0.12.3" = overridableMkRustCrate (profileName: rec {
    name = "base64";
    version = "0.12.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3441f0f7b02788e948e47f457ca01f1d7e6d92c693bc132c22b087d3141c03ff"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });

  "unknown".base_db."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "base_db";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/base_db";
    dependencies = {
      cfg = rustPackages."unknown".cfg."0.0.0" { inherit profileName; };
      profile = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      salsa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".salsa."0.15.2" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
      vfs = rustPackages."unknown".vfs."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" = overridableMkRustCrate (profileName: rec {
    name = "byteorder";
    version = "1.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "08c48aae112d48ed9f069b33538ea9e3e90aa263cfa3d1c24309612b1f7472de"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" = overridableMkRustCrate (profileName: rec {
    name = "cargo_metadata";
    version = "0.11.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "89fec17b16f1ac67908af82e47d0a90a7afd0e1827b181cd77504323d3263d35"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.10.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.59" = overridableMkRustCrate (profileName: rec {
    name = "cc";
    version = "1.0.59";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "66120af515773fb005778dc07c261bd201ec8ce50bd6e7144c927753fe013381"; };
  });

  "unknown".cfg."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "cfg";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/cfg";
    dependencies = {
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      mbe = rustPackages."unknown".mbe."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.23.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-derive";
    version = "0.23.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3cb438e961fd7f1183dc5e0bdcfd09253bf9b90592cf665d1ce6787d8a4908f"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.23.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-ir";
    version = "0.23.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bb332abfcb015b148c6fbab39b1d13282745b0f7f312019dd8e138f5f3f0855d"; };
    dependencies = {
      chalk_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.23.0" { profileName = "__noProfile"; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".chalk-recursive."0.23.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-recursive";
    version = "0.23.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e7c7673f10c5fa1acf7fa07d4f4c5917cbcf161ed3a952d14530c79950de32d2"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      chalk_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.23.0" { profileName = "__noProfile"; };
      chalk_ir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.23.0" { inherit profileName; };
      chalk_solve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-solve."0.23.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".chalk-solve."0.23.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-solve";
    version = "0.23.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "802de4eff72e5a5d2828e6c07224c74d66949dc6308aff025d0ae2871a11b4eb"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "tracing-full" ]
      [ "tracing-subscriber" ]
      [ "tracing-tree" ]
    ];
    dependencies = {
      chalk_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.23.0" { profileName = "__noProfile"; };
      chalk_ir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.23.0" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      petgraph = rustPackages."registry+https://github.com/rust-lang/crates.io-index".petgraph."0.5.1" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" { inherit profileName; };
      tracing_tree = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-tree."0.1.5" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" = overridableMkRustCrate (profileName: rec {
    name = "chrono";
    version = "0.4.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "942f72db697d8767c22d46a598e01f2d3b475501ea43d0db4f16d90259182d0b"; };
    features = builtins.concatLists [
      [ "clock" ]
      [ "default" ]
      [ "std" ]
      [ "time" ]
    ];
    dependencies = {
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.43" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cloudabi";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4344512281c643ae7638bbabc3af17a11307803ec8f0fcad9fae512a8bf36467"; };
    features = builtins.concatLists [
      [ "bitflags" ]
      [ "default" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.44" = overridableMkRustCrate (profileName: rec {
    name = "cmake";
    version = "0.1.44";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0e56268c17a6248366d66d4a47a3381369d068cce8409bb1716ed77ea32163bb"; };
    dependencies = {
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.59" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "crc32fast";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ba125de2af0df55319f41944744ad91c71113bf74a4646efff39afe1f6842db1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-channel";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09ee0cc8804d5393478d743b035099520087a5186f3b93fa58cec08fa62407b6"; };
    features = builtins.concatLists [
      [ "crossbeam-utils" ]
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-deque";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9f02af974daeee82218205558e51ec8768b48cf524bd01d550abe5573a608285"; };
    dependencies = {
      crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.8.2" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-epoch";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "058ed274caafc1f60c4997b5fc07bf7dc7cca454af7c6e81edffe5f33f70dace"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
      memoffset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.5" { inherit profileName; };
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-queue";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "774ba60a54c213d409d5353bda12d49cd68d14e45036a285234c8d6f91f92570"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3c7c73a2d1e9fc0886a08b93e98eb643461230d5f1925e4036204d5f2e261a8"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "default")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "flycheck" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify") "lazy_static")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "flycheck" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "flycheck" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" then "autocfg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "difference";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".drop_bomb."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "drop_bomb";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9bda8e21c04aca2ae33ffc2fd8c23134f3cac46db123ba97bd9d3f3b8a4a85e1"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "either";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd56b59865bce947ac5958779cfa508f6c3b9497cc762b7e24a12d11ccde2c4f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" = overridableMkRustCrate (profileName: rec {
    name = "ena";
    version = "0.14.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d7402b94a93c24e742487327a7cd839dc9d36fec9de9fb25b09f2dae459f36c3"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "44533bbbb3bb3c1fa17d9f2e4e38bbbaf8396ba82193c4cb1b6445d711445d36"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
    };
  });

  "unknown".expect."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "expect";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/expect";
    dependencies = {
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" = overridableMkRustCrate (profileName: rec {
    name = "filetime";
    version = "0.2.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3ed85775dcc68644b5c950ac06a2b23768d3bc9390464151aaf27136998dcf9e"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "fixedbitset";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "37ab347416e802de484e4d03c7316c48f1ecb56574dfd4a46a80f173ce1de04d"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.17" = overridableMkRustCrate (profileName: rec {
    name = "flate2";
    version = "1.0.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "766d0e77a2c1502169d4a93ff3b8c15a71fd946cd0126309752104e5f3c46d94"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "miniz_oxide" ]
      [ "rust_backend" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.1" { inherit profileName; };
    };
  });

  "unknown".flycheck."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "flycheck";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/flycheck";
    dependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" { inherit profileName; };
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
      jod_thread = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jod-thread."0.1.2" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      toolchain = rustPackages."unknown".toolchain."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".fsevent."2.0.2" = overridableMkRustCrate (profileName: rec {
    name = "fsevent";
    version = "2.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "97f347202c95c98805c216f9e1df210e8ebaec9fdb2365700a43c10797a35e63"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      fsevent_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fsevent-sys."3.0.2" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".fsevent-sys."3.0.2" = overridableMkRustCrate (profileName: rec {
    name = "fsevent-sys";
    version = "3.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77a29c77f1ca394c3e73a9a5d24cfcabb734682d9634fc398f2204a63c994120"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".fst."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "fst";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a7293de202dbfe786c0b3fe6110a027836c5438ed06db7b715c9955ff4bfea51"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      fuchsia_zircon_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon-sys";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".gimli."0.22.0" = overridableMkRustCrate (profileName: rec {
    name = "gimli";
    version = "0.22.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aaf91faf136cb47367fa430cd46e37a788775e7fa104f8b4bcb3861dc389b724"; };
    features = builtins.concatLists [
      [ "read" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".goblin."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "goblin";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d20fd25aa456527ce4f544271ae4fea65d2eda4a6561ea56f39fb3ee4f7e3884"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "archive" ]
      [ "default" ]
      [ "elf32" ]
      [ "elf64" ]
      [ "endian_fd" ]
      [ "log" ]
      [ "mach32" ]
      [ "mach64" ]
      [ "pe32" ]
      [ "pe64" ]
      [ "std" ]
    ];
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      plain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plain."0.2.3" { inherit profileName; };
      scroll = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scroll."0.10.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e91b62f79061a0bc2e046024cb7ba44b08419ed238ecbd9adbd787434b9e8c25"; };
    features = builtins.concatLists [
      [ "raw" ]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "heck";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205"; };
    dependencies = {
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" = overridableMkRustCrate (profileName: rec {
    name = "hermit-abi";
    version = "0.1.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3deed196b6e7f9e44a2ae8d94225d80302d81208b1bb673fd21fe634645c85a9"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
    };
  });

  "unknown".hir."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "hir";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/hir";
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      hir_def = rustPackages."unknown".hir_def."0.0.0" { inherit profileName; };
      hir_expand = rustPackages."unknown".hir_expand."0.0.0" { inherit profileName; };
      hir_ty = rustPackages."unknown".hir_ty."0.0.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      profile = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
    };
  });

  "unknown".hir_def."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "hir_def";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/hir_def";
    dependencies = {
      anymap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anymap."0.12.1" { inherit profileName; };
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      cfg = rustPackages."unknown".cfg."0.0.0" { inherit profileName; };
      drop_bomb = rustPackages."registry+https://github.com/rust-lang/crates.io-index".drop_bomb."0.1.5" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      fst = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fst."0.4.4" { inherit profileName; };
      hir_expand = rustPackages."unknown".hir_expand."0.0.0" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mbe = rustPackages."unknown".mbe."0.0.0" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" { inherit profileName; };
      profile = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      expect = rustPackages."unknown".expect."0.0.0" { inherit profileName; };
    };
  });

  "unknown".hir_expand."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "hir_expand";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/hir_expand";
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mbe = rustPackages."unknown".mbe."0.0.0" { inherit profileName; };
      parser = rustPackages."unknown".parser."0.0.0" { inherit profileName; };
      profile = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
    };
  });

  "unknown".hir_ty."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "hir_ty";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/hir_ty";
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      chalk_ir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.23.0" { inherit profileName; };
      chalk_recursive = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-recursive."0.23.0" { inherit profileName; };
      chalk_solve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-solve."0.23.0" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" { inherit profileName; };
      hir_def = rustPackages."unknown".hir_def."0.0.0" { inherit profileName; };
      hir_expand = rustPackages."unknown".hir_expand."0.0.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      profile = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      expect = rustPackages."unknown".expect."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" { inherit profileName; };
      tracing_tree = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-tree."0.1.5" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".home."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "home";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2456aef2e6b6a9784192ae780c0f15bc57df0e918585282325e8c8ac27737654"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "unknown".ide."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "ide";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/ide";
    dependencies = {
      assists = rustPackages."unknown".assists."0.0.0" { inherit profileName; };
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      cfg = rustPackages."unknown".cfg."0.0.0" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      hir = rustPackages."unknown".hir."0.0.0" { inherit profileName; };
      ide_db = rustPackages."unknown".ide_db."0.0.0" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      oorandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.2" { inherit profileName; };
      profile = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      ssr = rustPackages."unknown".ssr."0.0.0" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      text_edit = rustPackages."unknown".text_edit."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      expect = rustPackages."unknown".expect."0.0.0" { inherit profileName; };
    };
  });

  "unknown".ide_db."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "ide_db";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/ide_db";
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "ide_db/wasm") "wasm")
    ];
    dependencies = {
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "base_db" else null } = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "either" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "fst" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fst."0.4.4" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "hir" else null } = rustPackages."unknown".hir."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "profile" else null } = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "rayon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "rustc_hash" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "stdx" else null } = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "syntax" else null } = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "test_utils" else null } = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "text_edit" else null } = rustPackages."unknown".text_edit."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "idna";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "02e2673c30ee86b5b96a9cb52ad15718aa1f966f5ab9ad54a8b95d5ca33120a9"; };
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" = overridableMkRustCrate (profileName: rec {
    name = "indexmap";
    version = "1.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "86b45e59b16c76b11bf9738fd5d38879d3bd28ad292d7b313608becb17ae2df9"; };
    dependencies = {
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.8.2" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".inotify."0.8.3" = overridableMkRustCrate (profileName: rec {
    name = "inotify";
    version = "0.8.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "46dd0a94b393c730779ccfd2a872b67b1eb67be3fc33082e733bdb38b5fde4d4"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      inotify_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.3" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "inotify-sys";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e74a1aa87c59aeff6ef2cc2fa62d41bc43f54952f55652656b18a02fd5e356c0"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "instant";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b141fdc7836c525d4d594027d318c84161ca17aaf8113ab1f81ab93ae897485"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "iovec";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "284f18f85651fe11e8a991b2adb42cb078325c996ed026d994719efcfca1d54b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "0.4.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dc6f3ad7b9d11a0c00842ff8de1b60ee58661048eb8049ed33c73594f359d7e6"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".jod-thread."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "jod-thread";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8b23360e99b8717f20aaa4598f5a6541efbe30630039fbc7706cf954a87947ae"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "kernel32-sys";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
    buildDependencies = {
      build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".lazycell."1.3.0" = overridableMkRustCrate (profileName: rec {
    name = "lazycell";
    version = "1.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.76";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "755456fae044e6fa1ebbbd1b3e902ae19e73097ed4ed87bb79934a867c007bc3"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".libloading."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "libloading";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2443d8f0478b16759158b2f66d525991a05491138bc05814ef52a250148ef4f9"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".libmimalloc-sys."0.1.16" = overridableMkRustCrate (profileName: rec {
    name = "libmimalloc-sys";
    version = "0.1.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "677c4be79b14bd72496b87789b702ba02cd1a9f16a59369fe847082fd03efd88"; };
    buildDependencies = {
      cmake = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.44" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "lock_api";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "28247cc5a5be2f05fbcd76dd0cf2c7d3b5400cb978a28042abcd4fa0b3f8261c"; };
    dependencies = {
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4fabed175da42fed1fa0746b0ea71f412aa9d35e76e95e59b192c64b9dc2bf8b"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "vfs-notify" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".lsp-server."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "lsp-server";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "87fce8851309a325974ec76efe7c9d954d152c9ff4fded6520eb3c96d0aa3a96"; };
    dependencies = {
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".lsp-types."0.79.0" = overridableMkRustCrate (profileName: rec {
    name = "lsp-types";
    version = "0.79.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7f1f86677fdbe8df5f88b99131b1424e50aad27bbe3e5900d221bc414bd72e9b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proposed" ]
    ];
    dependencies = {
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.12.3" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      serde_repr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.6" { profileName = "__noProfile"; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".matchers."0.0.1" = overridableMkRustCrate (profileName: rec {
    name = "matchers";
    version = "0.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f099785f7595cc4b4553a174ce30dd7589ef93391ff414dbb67f62392b9e0ce1"; };
    dependencies = {
      regex_automata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "matches";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "maybe-uninit";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "60302e4db3a61da70c0cb7991976248362f30319e88850c487b9b95bbf059e00"; };
  });

  "unknown".mbe."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "mbe";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/mbe";
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      parser = rustPackages."unknown".parser."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "memmap";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6585fd95e7bb50d6cc31e20d4cf9afb4e2ba16c5846fc76793f11218da9c475b"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.5" = overridableMkRustCrate (profileName: rec {
    name = "memoffset";
    version = "0.5.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c198b026e1bbf08a937e94c6c60f9ec4a2267f5b0d2eec9c1b21b061ce2be55f"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".mimalloc."0.1.20" = overridableMkRustCrate (profileName: rec {
    name = "mimalloc";
    version = "0.1.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "00759bcf69082fa629ae8823fcc72f7454a90c6476110297a1ae5fb3a559e474"; };
    dependencies = {
      libmimalloc_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libmimalloc-sys."0.1.16" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "miniz_oxide";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4d7559a8a40d0f97e1edea3220f698f78b1c5ab67532e49f68fde3910323b722"; };
    dependencies = {
      adler = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."0.2.3" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" = overridableMkRustCrate (profileName: rec {
    name = "mio";
    version = "0.6.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fce347092656428bc8eaf6201042cb551b8d67855af7374542a92a0fbfcac430"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "with-deprecated" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      ${ if hostPlatform.isWindows then "kernel32" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" { inherit profileName; };
      net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".mio-extras."2.0.6" = overridableMkRustCrate (profileName: rec {
    name = "mio-extras";
    version = "2.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "52403fe290012ce777c4626790c8951324a2b9e3316b3143779c72b029742f19"; };
    dependencies = {
      lazycell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazycell."1.3.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "miow";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8c1f2f3b1cf331de6896aabf6e9d55dca90356cc9960cca7eaaf408a355ae919"; };
    dependencies = {
      kernel32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
      net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
      ws2_32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" = overridableMkRustCrate (profileName: rec {
    name = "net2";
    version = "0.2.34";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2ba7c918ac76704fb42afcbbb43891e72731f3dcca3bef2a19786297baf14af7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "duration" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" || hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".notify."5.0.0-pre.3" = overridableMkRustCrate (profileName: rec {
    name = "notify";
    version = "5.0.0-pre.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77d03607cf88b4b160ba0e9ed425fff3cee3b55ac813f0c685b3a3772da37d0e"; };
    dependencies = {
      anymap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anymap."0.12.1" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "darwin" then "fsevent" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fsevent."2.0.2" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "darwin" then "fsevent_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fsevent-sys."3.0.2" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "linux" then "inotify" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify."0.8.3" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "linux" then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "linux" then "mio_extras" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-extras."2.0.6" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.43" = overridableMkRustCrate (profileName: rec {
    name = "num-integer";
    version = "0.1.43";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8d59457e662d541ba17869cf51cf177c0b5f0cbf476c66bdc90bf1edac4f875b"; };
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" = overridableMkRustCrate (profileName: rec {
    name = "num-traits";
    version = "0.2.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac267bcc07f48ee5f8935ab0d24f316fb722d7a1292e2913f0cc196b29ffd611"; };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" = overridableMkRustCrate (profileName: rec {
    name = "num_cpus";
    version = "1.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3"; };
    dependencies = {
      ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "aarch64") && hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".object."0.20.0" = overridableMkRustCrate (profileName: rec {
    name = "object";
    version = "0.20.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1ab52be62400ca80aa00285d25253d7f7c437b7375c4de678f5405d3afe82ca5"; };
    features = builtins.concatLists [
      [ "coff" ]
      [ "elf" ]
      [ "macho" ]
      [ "pe" ]
      [ "read_core" ]
      [ "unaligned" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" = overridableMkRustCrate (profileName: rec {
    name = "once_cell";
    version = "1.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "260e51e7efe62b592207e9e13a68e43692a7a279171d6ba57abd208bf23645ad"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.2" = overridableMkRustCrate (profileName: rec {
    name = "oorandom";
    version = "11.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a170cebd8021a008ea92e4db85a72f80b35df514ec664b296fdcbb654eac0b2c"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a4893845fa2ca272e647da5d0e46660a314ead9c2fdd9a883aabc32e481a8733"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" { inherit profileName; };
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.1" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c361aa727dd08437f2f1447be8b59a33b0edd15e0fcee698f935613d9efbca9b"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.1.0" { inherit profileName; };
      instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "unknown".parser."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "parser";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/parser";
    dependencies = {
      drop_bomb = rustPackages."registry+https://github.com/rust-lang/crates.io-index".drop_bomb."0.1.5" { inherit profileName; };
    };
  });

  "unknown".paths."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "paths";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/paths";
  });

  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "percent-encoding";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".perf-event."0.4.5" = overridableMkRustCrate (profileName: rec {
    name = "perf-event";
    version = "0.4.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "273069d0b956939ba75e8b5663328b9b7f0dc2e262b3306c6be66c4d87e2240a"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      perf_event_open_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".perf-event-open-sys."1.0.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".perf-event-open-sys."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "perf-event-open-sys";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ce9bedf5da2c234fdf2391ede2b90fabf585355f33100689bc364a3ea558561a"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".petgraph."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "petgraph";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "467d164a6de56270bd7c4d070df81d07beace25012d5103ced4e9ff08d6afdb7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "graphmap" ]
      [ "matrix_graph" ]
      [ "stable_graph" ]
    ];
    dependencies = {
      fixedbitset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.2.0" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pico-args."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "pico-args";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "28b9b4df73455c861d7cbf8be42f01d3b373ed7f02e378d55fa84eafc6f638b1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "eq-separator" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".plain."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "plain";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "1.0.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04f5f085b5d71e2188cb8271e5da0161ad52c3f227a661a3c135fdf28e258b12"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });

  "unknown".proc_macro_api."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "proc_macro_api";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/proc_macro_api";
    dependencies = {
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
      jod_thread = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jod-thread."0.1.2" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
    };
  });

  "unknown".proc_macro_srv."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "proc_macro_srv";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/proc_macro_srv";
    dependencies = {
      goblin = rustPackages."registry+https://github.com/rust-lang/crates.io-index".goblin."0.2.3" { inherit profileName; };
      libloading = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libloading."0.6.3" { inherit profileName; };
      mbe = rustPackages."unknown".mbe."0.0.0" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" { inherit profileName; };
      proc_macro_api = rustPackages."unknown".proc_macro_api."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" { inherit profileName; };
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      proc_macro_test = buildRustPackages."unknown".proc_macro_test."0.0.0" { profileName = "__noProfile"; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      toolchain = rustPackages."unknown".toolchain."0.0.0" { inherit profileName; };
    };
  });

  "unknown".proc_macro_test."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "proc_macro_test";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/proc_macro_test";
  });

  "unknown".profile."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "profile";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/profile";
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "profile/backtrace") "backtrace")
      (lib.optional (rootFeatures' ? "profile/cpu_profiler") "cpu_profiler")
    ];
    dependencies = {
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "profile" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "arena" else null } = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "profile/backtrace" then "backtrace" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.50" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "profile" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "profile" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "profile" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" { inherit profileName; };
      ${ if (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "profile" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") && hostPlatform.parsed.kernel.name == "linux" then "perf_event" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".perf-event."0.4.5" { inherit profileName; };
    };
  });

  "unknown".project_model."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "project_model";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/project_model";
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" { inherit profileName; };
      cfg = rustPackages."unknown".cfg."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      paths = rustPackages."unknown".paths."0.0.0" { inherit profileName; };
      proc_macro_api = rustPackages."unknown".proc_macro_api."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      toolchain = rustPackages."unknown".toolchain."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "1.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aa563d17ecb180e500da1cfd2b028310ac758de548efdd203e18f283af693f37"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" = overridableMkRustCrate (profileName: rec {
    name = "rayon";
    version = "1.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "62f02856753d04e03e26929f820d0a0a337ebe71f849801eea335d464b349080"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.7.1" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.1" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.7.1" = overridableMkRustCrate (profileName: rec {
    name = "rayon-core";
    version = "1.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e92e15d89083484e11353891f1af602cc661426deb9564c298b270c726973280"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" = overridableMkRustCrate (profileName: rec {
    name = "redox_syscall";
    version = "0.1.57";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9c3780fcf44b193bc4d09f36d2a3c87b251da4a046c87795a0d35f4f927ad8e6"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.9" = overridableMkRustCrate (profileName: rec {
    name = "regex-automata";
    version = "0.1.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ae1ded71d66a4a97f5e961fd0cb25a5f366a42a41570d16a763a69c092c26ae4"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "regex-syntax" ]
      [ "std" ]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.6.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "26412eb97c6b088a6997e05f69403a802a92d520de2f8e63c2b65f9e0f47c4e8"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "unicode" ]
      [ "unicode-age" ]
      [ "unicode-bool" ]
      [ "unicode-case" ]
      [ "unicode-gencat" ]
      [ "unicode-perl" ]
      [ "unicode-script" ]
      [ "unicode-segment" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".rowan."0.10.0" = overridableMkRustCrate (profileName: rec {
    name = "rowan";
    version = "0.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1e081ed6eacce09e243b619ab90f069c27b0cff8a6d0eb8ad2ec935b65853798"; };
    dependencies = {
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      smol_str = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.1.16" { inherit profileName; };
      text_size = rustPackages."registry+https://github.com/rust-lang/crates.io-index".text-size."1.0.0" { inherit profileName; };
      thin_dst = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thin-dst."1.1.0" { inherit profileName; };
    };
  });

  "unknown".rust-analyzer."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rust-analyzer";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/rust-analyzer";
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rust-analyzer/mimalloc") "mimalloc")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rust-analyzer" then "anyhow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "base_db" else null } = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "cfg" else null } = rustPackages."unknown".cfg."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "crossbeam_channel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "flycheck" else null } = rustPackages."unknown".flycheck."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "hir" else null } = rustPackages."unknown".hir."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "hir_def" else null } = rustPackages."unknown".hir_def."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "hir_ty" else null } = rustPackages."unknown".hir_ty."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "ide" else null } = rustPackages."unknown".ide."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "ide_db" else null } = rustPackages."unknown".ide_db."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "itertools" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "jod_thread" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jod-thread."0.1.2" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "lsp_server" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lsp-server."0.3.4" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "lsp_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lsp-types."0.79.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer/mimalloc" then "mimalloc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mimalloc."0.1.20" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "oorandom" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.2" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "parking_lot" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "pico_args" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pico-args."0.3.4" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "proc_macro_srv" else null } = rustPackages."unknown".proc_macro_srv."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "profile" else null } = rustPackages."unknown".profile."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "project_model" else null } = rustPackages."unknown".project_model."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "rayon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "rustc_hash" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "serde_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "ssr" else null } = rustPackages."unknown".ssr."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "stdx" else null } = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "syntax" else null } = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "text_edit" else null } = rustPackages."unknown".text_edit."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "threadpool" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".threadpool."1.8.1" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "toolchain" else null } = rustPackages."unknown".toolchain."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "vfs" else null } = rustPackages."unknown".vfs."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" then "vfs_notify" else null } = rustPackages."unknown".vfs-notify."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rust-analyzer" && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    devDependencies = {
      expect = rustPackages."unknown".expect."0.0.0" { inherit profileName; };
      mbe = rustPackages."unknown".mbe."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      tt = rustPackages."unknown".tt."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."673.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_lexer";
    version = "673.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f6b71fa1285bdefe5fb61e59b63d6cc246abf337f4acafdd620d721bc488e671"; };
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" = overridableMkRustCrate (profileName: rec {
    name = "rustc-demangle";
    version = "0.1.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-hash";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.5" = overridableMkRustCrate (profileName: rec {
    name = "ryu";
    version = "1.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".salsa."0.15.2" = overridableMkRustCrate (profileName: rec {
    name = "salsa";
    version = "0.15.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9ab29056d4fb4048a5f0d169c9b6e5526160c9ec37aded5a6879c2c9c445a8e4"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" { inherit profileName; };
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      oorandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.2" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      salsa_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".salsa-macros."0.15.2" { profileName = "__noProfile"; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".salsa-macros."0.15.2" = overridableMkRustCrate (profileName: rec {
    name = "salsa-macros";
    version = "0.15.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a1c3aec007c63c4ed4cd7a018529fb0b5575c4562575fc6a40d6cd2ae0b792ef"; };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "same-file";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "scoped-tls";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea6a9290e3c9cf0f18145ef7ffa62d68ee0bf5fcd651017e586dc7fd5da448c2"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "scopeguard";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".scroll."0.10.1" = overridableMkRustCrate (profileName: rec {
    name = "scroll";
    version = "0.10.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "abb2332cb595d33f7edd5700f4cbf94892e680c7f0ae56adab58a35190b66cb1"; };
    features = builtins.concatLists [
      [ "derive" ]
      [ "scroll_derive" ]
      [ "std" ]
    ];
    dependencies = {
      scroll_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".scroll_derive."0.10.2" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".scroll_derive."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "scroll_derive";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e367622f934864ffa1c704ba2b82280aab856e3d8213c84c5720257eb34b15b9"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".semver."0.10.0" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "0.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "394cec28fa623e00903caf7ba4fa6fb9a0e260280bb8cdbbba029611108a0190"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "serde" ]
    ];
    dependencies = {
      semver_parser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "semver-parser";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" = overridableMkRustCrate (profileName: rec {
    name = "serde";
    version = "1.0.115";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e54c9a88f2da7238af84b5101443f0c0d0a3bbdc455e34a5c9497b1903ed55d5"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "default")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "derive")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "serde_derive")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "test_utils" || rootFeatures' ? "tt") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" then "serde_derive" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" = overridableMkRustCrate (profileName: rec {
    name = "serde_derive";
    version = "1.0.115";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "609feed1d0a73cc36a0182a840a9b37b4a82f0b1150369f0536a9e3f2a31dc48"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" = overridableMkRustCrate (profileName: rec {
    name = "serde_json";
    version = "1.0.57";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "164eacbdb13512ec2745fb09d51fd5b22b0d65ed294a1dcf7285a360c80a675c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" { inherit profileName; };
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.5" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "serde_repr";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2dc6b7951b17b051f3210b063f12cc17320e2fe30ae05b0fe2a3abb068551c76"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.0.9" = overridableMkRustCrate (profileName: rec {
    name = "sharded-slab";
    version = "0.0.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "06d5a3f5166fb5b42a5439f2eee8b9de149e235961e3eb21c5808fc3ea17ff3e"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "slab";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "1.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fbee7696b84bbf3d89a1c2eccff0850e3047ed46bfcd2e92c29a2d074d57e252"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".smol_str."0.1.16" = overridableMkRustCrate (profileName: rec {
    name = "smol_str";
    version = "0.1.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2f7909a1d8bc166a862124d84fdc11bda0ea4ed3157ccca662296919c2972db1"; };
    features = builtins.concatLists [
      [ "serde" ]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });

  "unknown".ssr."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "ssr";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/ssr";
    dependencies = {
      base_db = rustPackages."unknown".base_db."0.0.0" { inherit profileName; };
      hir = rustPackages."unknown".hir."0.0.0" { inherit profileName; };
      ide_db = rustPackages."unknown".ide_db."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      text_edit = rustPackages."unknown".text_edit."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      expect = rustPackages."unknown".expect."0.0.0" { inherit profileName; };
    };
  });

  "unknown".stdx."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "stdx";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/stdx";
  });

  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "1.0.39";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "891d8d6567fe7c7f8835a3a98af4208f3846fba258c1bc3c31d6e506239f11f9"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "clone-impls")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "default")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "derive")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "extra-traits")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "full")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "parsing")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "printing")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "proc-macro")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "quote")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax") "visit")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "visit-mut")
    ];
    dependencies = {
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" then "proc_macro2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" then "quote" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      ${ if rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "cfg" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "mbe" || rootFeatures' ? "proc_macro_api" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" then "unicode_xid" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" = overridableMkRustCrate (profileName: rec {
    name = "synstructure";
    version = "0.12.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b834f2d66f734cb897113e34aaff2f1ab4719ca946f9a7358dba8f8064148701"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });

  "unknown".syntax."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "syntax";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/syntax";
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" { inherit profileName; };
      parser = rustPackages."unknown".parser."0.0.0" { inherit profileName; };
      rowan = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rowan."0.10.0" { inherit profileName; };
      rustc_lexer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."673.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      smol_str = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.1.16" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      text_edit = rustPackages."unknown".text_edit."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      expect = rustPackages."unknown".expect."0.0.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" { inherit profileName; };
      test_utils = rustPackages."unknown".test_utils."0.0.0" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "termcolor";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bb6bfa289a4d7c5766392812c0a1f4c1ba45afa1ad47803c11e1f407d846d75f"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });

  "unknown".test_utils."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "test_utils";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/test_utils";
    dependencies = {
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
      text_size = rustPackages."registry+https://github.com/rust-lang/crates.io-index".text-size."1.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".text-size."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "text-size";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f03e7efdedc3bc78cb2337f1e2785c39e45f5ef762d9e4ebb137fff7380a6d8a"; };
  });

  "unknown".text_edit."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "text_edit";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/text_edit";
    dependencies = {
      text_size = rustPackages."registry+https://github.com/rust-lang/crates.io-index".text-size."1.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thin-dst."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "thin-dst";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "db3c46be180f1af9673ebb27bc1235396f61ef6965b3fe0dbb2e624deb604f0e"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "thread_local";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d40c6d1b69745a6ec6fb1ca717914848da4b44ae29d9b3080cbee91d72a69b14"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".threadpool."1.8.1" = overridableMkRustCrate (profileName: rec {
    name = "threadpool";
    version = "1.8.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d050e60b33d41c19108b32cea32164033a9013fe3b46cbd4457559bfbf77afaa"; };
    dependencies = {
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" = overridableMkRustCrate (profileName: rec {
    name = "time";
    version = "0.1.43";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca8a50ef2360fbd1eeb0ecd46795a87a19024eb4b53c5dc916ca1fd95fe62438"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.76" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tinyvec."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "tinyvec";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "238ce071d267c5710f9d31451efec16c5ee22de34df17cc05e56cbc92e967117"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
    ];
  });

  "unknown".toolchain."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "toolchain";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/toolchain";
    dependencies = {
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.3" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" = overridableMkRustCrate (profileName: rec {
    name = "tracing";
    version = "0.1.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6d79ca061b032d6ce30c660fded31189ca0b9922bf483cd70759f13a2d86786c"; };
    features = builtins.concatLists [
      [ "attributes" ]
      [ "default" ]
      [ "std" ]
      [ "tracing-attributes" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      tracing_attributes = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.11" { profileName = "__noProfile"; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "tracing-attributes";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "80e0ccfc3378da0cce270c946b676a376943f5cd16aeba64568e7939806f4ada"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.39" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" = overridableMkRustCrate (profileName: rec {
    name = "tracing-core";
    version = "0.1.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4f0e00789804e99b20f12bc7003ca416309d28a6f495d6af58d1e2c2842461b5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "std" ]
    ];
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "tracing-log";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5e0f8c7178e13481ff6765bd169b33e8d554c5d2bbede5e32c356194be02b9b9"; };
    features = builtins.concatLists [
      [ "log-tracer" ]
      [ "std" ]
    ];
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "tracing-serde";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b6ccba2f8f16e0ed268fc765d9b7ff22e965e7185d32f8f1ec8294fe17d86e79"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "tracing-subscriber";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "abd165311cc4d7a555ad11cc77a37756df836182db0d81aac908c8184c584f40"; };
    features = builtins.concatLists [
      [ "ansi" ]
      [ "ansi_term" ]
      [ "chrono" ]
      [ "default" ]
      [ "env-filter" ]
      [ "fmt" ]
      [ "json" ]
      [ "lazy_static" ]
      [ "matchers" ]
      [ "regex" ]
      [ "registry" ]
      [ "serde" ]
      [ "serde_json" ]
      [ "sharded-slab" ]
      [ "smallvec" ]
      [ "thread_local" ]
      [ "tracing-log" ]
      [ "tracing-serde" ]
    ];
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.12.1" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      matchers = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchers."0.0.1" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      sharded_slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.0.9" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
      tracing_log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.1" { inherit profileName; };
      tracing_serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-tree."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "tracing-tree";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e1a3dc4774db3a6b2d66a4f8d8de670e874ec3ed55615860c994927419b32c5f"; };
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.12.1" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" { inherit profileName; };
    };
  });

  "unknown".tt."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "tt";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/tt";
    dependencies = {
      smol_str = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smol_str."0.1.16" { inherit profileName; };
      stdx = rustPackages."unknown".stdx."0.0.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ungrammar."1.1.2" = overridableMkRustCrate (profileName: rec {
    name = "ungrammar";
    version = "1.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bab6142ac77be714b1ea78faca6efaed5478c50724786b0fe80d8528d10692b3"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "unicode-bidi";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" = overridableMkRustCrate (profileName: rec {
    name = "unicode-normalization";
    version = "0.1.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6fb19cf769fa8c6a80a162df694621ebeb4dafb606470b2b2fce0be40a98a977"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      tinyvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."0.3.4" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-segmentation";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e83e153d1053cbb5a118eeff7fd5be06ed99153f00dbcd8ae310c5fb2b22edc0"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode-xid";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" = overridableMkRustCrate (profileName: rec {
    name = "url";
    version = "2.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "829d4a8476c35c9bf0bbce5a3b23f4106f79728039b726d292bb93bc106787cb"; };
    features = builtins.concatLists [
      [ "serde" ]
    ];
    dependencies = {
      idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });

  "unknown".vfs."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "vfs";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/vfs";
    dependencies = {
      fst = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fst."0.4.4" { inherit profileName; };
      paths = rustPackages."unknown".paths."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
    };
  });

  "unknown".vfs-notify."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "vfs-notify";
    version = "0.0.0";
    registry = "unknown";
    src = "${workspaceSrc}/crates/vfs-notify";
    dependencies = {
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
      jod_thread = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jod-thread."0.1.2" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      notify = rustPackages."registry+https://github.com/rust-lang/crates.io-index".notify."5.0.0-pre.3" { inherit profileName; };
      paths = rustPackages."unknown".paths."0.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      vfs = rustPackages."unknown".vfs."0.0.0" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" = overridableMkRustCrate (profileName: rec {
    name = "walkdir";
    version = "2.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "777182bc735b6424e1a57516d35ed72cb8019d85c8c9bf536dccb3445c1a2f7d"; };
    dependencies = {
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.2.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "rust-analyzer") "basetsd")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "consoleapi")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "errhandlingapi")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "fileapi")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "vfs-notify") "handleapi")
      (lib.optional (rootFeatures' ? "rust-analyzer" || rootFeatures' ? "vfs-notify") "ioapiset")
      (lib.optional (rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "rust-analyzer") "libloaderapi")
      (lib.optional (rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "rust-analyzer") "memoryapi")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "vfs-notify") "minwinbase")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "minwindef")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "ntdef")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "ntstatus")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "processenv")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "profileapi")
      (lib.optional (rootFeatures' ? "flycheck" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "toolchain") "shlobj")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "toolchain" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "std")
      (lib.optional (rootFeatures' ? "rust-analyzer" || rootFeatures' ? "vfs-notify") "synchapi")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "sysinfoapi")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr") "timezoneapi")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "winbase")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "hir" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "wincon")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "toolchain" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "winerror")
      (lib.optional (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") "winnt")
      (lib.optional (rootFeatures' ? "rust-analyzer" || rootFeatures' ? "vfs-notify") "winsock2")
      (lib.optional (rootFeatures' ? "rust-analyzer" || rootFeatures' ? "vfs-notify") "ws2def")
      (lib.optional (rootFeatures' ? "rust-analyzer" || rootFeatures' ? "vfs-notify") "ws2ipdef")
      (lib.optional (rootFeatures' ? "rust-analyzer" || rootFeatures' ? "vfs-notify") "ws2tcpip")
    ];
    dependencies = {
      ${ if (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "toolchain" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") && hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; };
      ${ if (rootFeatures' ? "assists" || rootFeatures' ? "base_db" || rootFeatures' ? "flycheck" || rootFeatures' ? "hir" || rootFeatures' ? "hir_def" || rootFeatures' ? "hir_expand" || rootFeatures' ? "hir_ty" || rootFeatures' ? "ide" || rootFeatures' ? "ide_db" || rootFeatures' ? "proc_macro_srv" || rootFeatures' ? "project_model" || rootFeatures' ? "rust-analyzer" || rootFeatures' ? "ssr" || rootFeatures' ? "syntax" || rootFeatures' ? "toolchain" || rootFeatures' ? "vfs-notify" || rootFeatures' ? "xtask") && hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "winapi-build";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "winapi-util";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".write-json."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "write-json";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "06069a848f95fceae3e5e03c0ddc8cb78452b56654ee0c8e68f938cf790fb9e3"; };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "ws2_32-sys";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
    buildDependencies = {
      build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
    };
  });

  "unknown".xtask."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "xtask";
    version = "0.1.0";
    registry = "unknown";
    src = "${workspaceSrc}/xtask";
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.17" { inherit profileName; };
      pico_args = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pico-args."0.3.4" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      ungrammar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ungrammar."1.1.2" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
      write_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".write-json."0.1.2" { inherit profileName; };
    };
  });

}
